/*
 * Shush API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package shush_api

import (
	"encoding/json"
	"github.com/gorilla/mux"
	log "github.com/sirupsen/logrus"
	"io/ioutil"
	"net/http"
	"time"
)

func UrlsGet(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}

func UrlsPost(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}

func UrlsShortUrlDelete(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}

func UrlsShortUrlGet(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	p := mux.Vars(r)
	sUrl := p["short_url"]
	v, err := bck.Get(sUrl)
	if err != nil {
		w.WriteHeader(http.StatusNotFound)
		//w.Write() // todo
		return
	}
	w.WriteHeader(http.StatusOK)
	_, err = w.Write([]byte(v))
	if err != nil {
		log.Warnf("response write failed %s", err.Error())
	}
}

func UrlsShortUrlPut(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	p := mux.Vars(r)
	sUrl := p["short_url"]
	url := Url{}
	b, err := ioutil.ReadAll(r.Body)
	if err != nil {
		log.Warn("malformed body")
		// todo inform user
		w.WriteHeader(http.StatusBadRequest)
		return
	}
	err = json.Unmarshal(b, &url)
	if err != nil {
		log.Warn("malformed json")
		// todo inform user
		w.WriteHeader(http.StatusBadRequest)
		return
	}
	err = bck.Set(sUrl, url.Target, 10 * time.Minute)
	if err != nil {
		log.Error(err)
		// todo inform user
		w.WriteHeader(http.StatusBadRequest)
		return
	}
	w.WriteHeader(http.StatusOK)
}
